version: "3"
name: bioloop
services:
  ui:
    image: node:19
    volumes:
      - ./ui/:/opt/sca/app
      - ui_modules:/opt/sca/app/node_modules
    ports:
      - 127.0.0.1:443:443
    working_dir: /opt/sca/app
    # command: sh -c "npm install && exec /opt/sca/app/node_modules/.bin/vite --host"
    # entrypoint: [ "tail", "-f", "/dev/null" ]
    entrypoint:
      - sh
      - -c
      - |
        npm install && exec /opt/sca/app/node_modules/.bin/vite --host

  api:
    image: node:19
    # user: ${APP_UID}:${APP_GID}
    # build:
      # context: ./api
      # args:
        # APP_UID: ${APP_UID} # read from .env file
        # APP_GID: ${APP_GID} # read from .env file
    # environment:
    #   - APP_UID=APP_UID
    #   - APP_GID=APP_GID
    volumes:
      - ./api/:/opt/sca/app
      - api_modules:/opt/sca/app/node_modules
    expose:
      - 3030
    ports:
      - 127.0.0.1:3030:3030
    working_dir: /opt/sca/app
    # entrypoint: ["tail", "-f", "/dev/null"]
    # command: sh -c "sleep infinity"
    entrypoint:
      - sh
      - -c
      - |
        npm install \
        && npx prisma generate client \
        && exec /opt/sca/app/node_modules/.bin/nodemon --signal SIGTERM src/index.js


    extra_hosts:
      - "host.docker.internal:host-gateway" # for connecting to services running on localhost of the host network
    depends_on:
     - postgres

  postgres:
    image: postgres:14.5
    # restart: unless-stopped
    environment:
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=app
    volumes:
      - ./db/db_postgres:/var/lib/postgresql/data
      - ./db/postgres/scripts:/docker-entrypoint-initdb.d
      - ./db/postgres/aux_scripts:/opt/sca/scripts
      - ./db/backups:/opt/sca/backups
    ports:
      - 127.0.0.1:5432:5432
    expose:
      - 5432

  nginx:
    image: nginx:1.25
    ports:
        - 8000:8000
    volumes:
        - ./nginx/src:/usr/share/nginx/html
        - ./nginx/conf:/etc/nginx/conf.d
        - ./data:/opt/sca/data
    extra_hosts:
      - "host.docker.internal:host-gateway" # for connecting to services running on localhost of the host network

# Health Systems
  synthea:
    build:
      context: ./synthea
    container_name: synthea
    environment:
      SYNTHEA_SEED: 456789
      SYNTHEA_SIZE: 20
      SYNTHEA_DATE: 20260318
    volumes:
      - ./omop/src/synthea/output:/usr/src/app/output
    entrypoint: ["tail", "-f", "/dev/null"]

  omop:
    build:
      context: ./omop
    container_name: omop
    environment:
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=app
      - POSTGRES_HOST=postgres
    volumes:
      - ./omop/src/synthea/output:/usr/src/app/src/synthea/output
      - ./omop/src/convert.R:/usr/src/app/src/convert.R
    depends_on:
      - postgres
      - synthea

  # fhir:
  #   # https://hub.docker.com/r/conceptant/hapi-fhir/
  #   image: conceptant/hapi-fhir
  #   container_name: fhir
  #   restart: unless-stopped
  #   ports:
  #   - 127.0.0.1:8080:8080
  #   volumes:
  #     - ./fhir:/var/lib/jetty/target






volumes:
  ui_modules:
    external: false

  api_modules:
    external: false
