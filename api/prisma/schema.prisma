generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Public Schema

model dataset {
  id               Int                 @id @default(autoincrement())
  name             String
  type             String
  num_directories  Int?
  num_files        Int?
  du_size          BigInt?
  size             BigInt?
  bundle_size      BigInt?
  description      String?
  created_at       DateTime            @default(now()) @db.Timestamp(6)
  updated_at       DateTime            @default(now()) @updatedAt @db.Timestamp(6)
  origin_path      String?
  archive_path     String?
  staged_path      String?
  is_deleted       Boolean             @default(false)
  is_staged        Boolean             @default(false)
  metadata         Json?
  workflows        workflow[]
  files            dataset_file[]
  audit_logs       dataset_audit[]
  states           dataset_state[]
  derived_datasets dataset_hierarchy[] @relation("source_datasets")
  source_datasets  dataset_hierarchy[] @relation("derived_datasets")
  projects         project_dataset[]
  accesses         data_access_log[]
  stage_requests   stage_request_log[]
  bundle           bundle?

  @@unique([name, type, is_deleted])
@@schema("public")
}

model dataset_hierarchy {
  source_id       Int
  derived_id      Int
  assigned_at     DateTime @default(now()) @db.Timestamp(6)
  source_dataset  dataset  @relation(name: "source_datasets", fields: [source_id], references: [id], onDelete: Cascade)
  derived_dataset dataset  @relation(name: "derived_datasets", fields: [derived_id], references: [id], onDelete: Cascade)

  @@id([source_id, derived_id])
@@schema("public")
}

model dataset_file {
  id         Int                      @id @default(autoincrement())
  name       String?
  path       String
  md5        String?
  size       BigInt?
  filetype   String?
  metadata   Json?
  status     String?
  dataset_id Int
  dataset    dataset                  @relation(fields: [dataset_id], references: [id], onDelete: Cascade)
  parents    dataset_file_hierarchy[] @relation("child")
  children   dataset_file_hierarchy[] @relation("parent")
  accesses   data_access_log[]

  @@unique([path, dataset_id])
  @@index([dataset_id])
@@schema("public")
}

model dataset_file_hierarchy {
  parent_id Int
  child_id  Int
  parent    dataset_file? @relation(name: "parent", fields: [parent_id], references: [id], onDelete: Cascade)
  child     dataset_file? @relation(name: "child", fields: [child_id], references: [id], onDelete: Cascade)

  @@id([parent_id, child_id])
  @@index([child_id])
@@schema("public")
}

model dataset_audit {
  id         Int      @id @default(autoincrement())
  action     String
  timestamp  DateTime @default(now())
  old_data   Json?
  new_data   Json?
  user_id    Int?
  user       user?    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  dataset_id Int?
  dataset    dataset? @relation(fields: [dataset_id], references: [id], onDelete: Cascade)
@@schema("public")
}

model dataset_state {
  state      String
  timestamp  DateTime @default(now()) @db.Timestamp(6)
  metadata   Json?
  dataset_id Int
  dataset    dataset? @relation(fields: [dataset_id], references: [id], onDelete: Cascade)

  @@id([timestamp, dataset_id, state])
@@schema("public")
}

model bundle {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)
  name       String
  size       BigInt?
  md5        String
  dataset_id Int      @unique
  dataset    dataset  @relation(fields: [dataset_id], references: [id], onDelete: Cascade)
@@schema("public")
}

model data_access_log {
  id           Int           @id @default(autoincrement())
  timestamp    DateTime      @default(now()) @db.Timestamp(6)
  access_type  access_type
  file_id      Int?
  dataset_file dataset_file? @relation(fields: [file_id], references: [id])
  dataset_id   Int?
  dataset      dataset?      @relation(fields: [dataset_id], references: [id])
  user_id      Int
  user         user          @relation(fields: [user_id], references: [id])
@@schema("public")
}

model stage_request_log {
  id         Int      @id @default(autoincrement())
  timestamp  DateTime @default(now()) @db.Timestamp(6)
  dataset_id Int?
  dataset    dataset? @relation(fields: [dataset_id], references: [id])
  user_id    Int
  user       user     @relation(fields: [user_id], references: [id])
@@schema("public")
}

model user {
  id             Int                 @id @default(autoincrement())
  username       String              @unique @db.VarChar(100)
  name           String?             @db.VarChar(100)
  email          String              @unique @db.VarChar(100)
  cas_id         String?             @unique @db.VarChar(100)
  notes          String?
  created_at     DateTime            @default(now()) @db.Timestamp(6)
  updated_at     DateTime            @default(now()) @updatedAt @db.Timestamp(6)
  is_deleted     Boolean             @default(false)
  user_role      user_role[]
  settings       user_settings?
  contacts       contact[]
  dataset_audit  dataset_audit[]
  projects       project_user[]
  password       user_password?
  login          user_login?
  accesses       data_access_log[]
  stage_requests stage_request_log[]
  about_edits    about[]
@@schema("public")
}

model user_password {
  id         Int      @id @default(autoincrement())
  password   String   @db.VarChar(100)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(6)
  user_id    Int      @unique
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
@@schema("public")
}

model user_login {
  id         Int      @id @default(autoincrement())
  last_login DateTime @default(now()) @db.Timestamp(6)
  method     String
  user_id    Int      @unique
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
@@schema("public")
}

model user_settings {
  id       Int  @id @default(autoincrement())
  user_id  Int  @unique
  settings Json
  users    user @relation(fields: [user_id], references: [id], onDelete: Cascade)
@@schema("public")
}

model contact {
  id          Int               @id @default(autoincrement())
  type        String
  value       String
  description String?
  user_id     Int?
  user        user?             @relation(fields: [user_id], references: [id], onDelete: Cascade)
  projects    project_contact[]

  @@unique([type, value])
@@schema("public")
}

model role {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(50)
  description String      @default("") @db.VarChar(255)
  user_role   user_role[]
@@schema("public")
}

model user_role {
  user_id     Int
  role_id     Int
  roles       role     @relation(fields: [role_id], references: [id], onDelete: Cascade)
  users       user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  assigned_at DateTime @default(now())

  @@id([user_id, role_id])
@@schema("public")
}

model workflow {
  id         String   @id
  dataset_id Int?
  dataset    dataset? @relation(fields: [dataset_id], references: [id], onDelete: Cascade)
@@schema("public")
}

model metric {
  timestamp   DateTime @default(now()) @db.Timestamp(6)
  measurement String
  subject     String
  usage       BigInt?
  limit       BigInt?
  fields      Json?
  tags        Json?

  @@id([timestamp, measurement, subject])
@@schema("public")
}

model project {
  id              String            @id @default(uuid())
  slug            String            @unique
  name            String
  description     String?
  browser_enabled Boolean           @default(false)
  funding         String?
  metadata        Json?
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @updatedAt @db.Timestamp(6)
  users           project_user[]
  datasets        project_dataset[]
  contacts        project_contact[]
@@schema("public")
}

model project_user {
  project_id  String
  user_id     Int
  assigned_at DateTime @default(now()) @db.Timestamp(6)
  project     project  @relation(fields: [project_id], references: [id], onDelete: Cascade)
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([project_id, user_id])
@@schema("public")
}

model project_dataset {
  project_id  String
  dataset_id  Int
  assigned_at DateTime @default(now()) @db.Timestamp(6)
  project     project  @relation(fields: [project_id], references: [id], onDelete: Cascade)
  dataset     dataset  @relation(fields: [dataset_id], references: [id], onDelete: Cascade)

  @@id([project_id, dataset_id])
@@schema("public")
}

model project_contact {
  project_id  String
  contact_id  Int
  assigned_at DateTime @default(now()) @db.Timestamp(6)
  project     project  @relation(fields: [project_id], references: [id], onDelete: Cascade)
  contact     contact  @relation(fields: [contact_id], references: [id], onDelete: Cascade)

  @@id([project_id, contact_id])
@@schema("public")
}

model log {
  id                Int            @id @default(autoincrement())
  timestamp         DateTime       @default(now()) @db.Timestamp(6)
  message           String
  level             String
  worker_process_id Int
  worker_log        worker_process @relation(fields: [worker_process_id], references: [id], onDelete: Cascade)

  @@index([worker_process_id])
@@schema("public")
}

model worker_process {
  id          Int      @id @default(autoincrement())
  pid         Int
  task_id     String
  step        String
  workflow_id String
  tags        Json?
  start_time  DateTime @default(now()) @db.Timestamp(6)
  hostname    String
  logs        log[]
@@schema("public")
}

model about {
  id            Int      @id @default(autoincrement())
  html          String
  created_at    DateTime @default(now()) @db.Timestamp(6)
  last_updated_by user   @relation(fields: [last_updated_by_id], references: [id])
  last_updated_by_id Int
@@schema("public")
}

enum access_type {
  BROWSER
  SLATE_SCRATCH
@@schema("public")
}



/// CDM Schema


/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model all_visits {
  encounter_id        String?
  patient             String?   @db.VarChar(1000)
  encounterclass      String?   @db.VarChar(1000)
  visit_start_date    DateTime? @db.Date
  visit_end_date      DateTime? @db.Timestamp(6)
  visit_occurrence_id BigInt?

  @@ignore
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model assign_all_visit_ids {
  encounter_id            String?   @db.VarChar(1000)
  person_source_value     String?   @db.VarChar(1000)
  date_service            DateTime? @db.Date
  date_service_end        DateTime? @db.Date
  encounterclass          String?   @db.VarChar(1000)
  visit_type              String?   @db.VarChar(1000)
  visit_start_date        DateTime? @db.Date
  visit_end_date          DateTime? @db.Timestamp(6)
  visit_occurrence_id     BigInt?
  visit_occurrence_id_new BigInt?

  @@ignore
@@schema("cdm")
}

model care_site {
  care_site_id                  Int     @id(map: "xpk_care_site")
  care_site_name                String? @db.VarChar(255)
  place_of_service_concept_id   Int?
  location_id                   Int?
  care_site_source_value        String? @db.VarChar(50)
  place_of_service_source_value String? @db.VarChar(50)
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cdm_source {
  cdm_source_name                String   @db.VarChar(255)
  cdm_source_abbreviation        String   @db.VarChar(25)
  cdm_holder                     String   @db.VarChar(255)
  source_description             String?
  source_documentation_reference String?  @db.VarChar(255)
  cdm_etl_reference              String?  @db.VarChar(255)
  source_release_date            DateTime @db.Date
  cdm_release_date               DateTime @db.Date
  cdm_version                    String?  @db.VarChar(10)
  cdm_version_concept_id         Int
  vocabulary_version             String   @db.VarChar(20)

  @@ignore
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cohort {
  cohort_definition_id Int
  subject_id           Int
  cohort_start_date    DateTime @db.Date
  cohort_end_date      DateTime @db.Date

  @@ignore
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model cohort_definition {
  cohort_definition_id          Int
  cohort_definition_name        String    @db.VarChar(255)
  cohort_definition_description String?
  definition_type_concept_id    Int
  cohort_definition_syntax      String?
  subject_concept_id            Int
  cohort_initiation_date        DateTime? @db.Date

  @@ignore
@@schema("cdm")
}

model concept {
  concept_id       Int      @id(map: "xpk_concept")
  concept_name     String   @db.VarChar(255)
  domain_id        String   @db.VarChar(20)
  vocabulary_id    String   @db.VarChar(20)
  concept_class_id String   @db.VarChar(20)
  standard_concept String?  @db.VarChar(1)
  concept_code     String   @db.VarChar(50)
  valid_start_date DateTime @db.Date
  valid_end_date   DateTime @db.Date
  invalid_reason   String?  @db.VarChar(1)
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model concept_ancestor {
  ancestor_concept_id      Int
  descendant_concept_id    Int
  min_levels_of_separation Int
  max_levels_of_separation Int

  @@ignore
@@schema("cdm")
}

model concept_class {
  concept_class_id         String @id(map: "xpk_concept_class") @db.VarChar(20)
  concept_class_name       String @db.VarChar(255)
  concept_class_concept_id Int
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model concept_relationship {
  concept_id_1     Int
  concept_id_2     Int
  relationship_id  String   @db.VarChar(20)
  valid_start_date DateTime @db.Date
  valid_end_date   DateTime @db.Date
  invalid_reason   String?  @db.VarChar(1)

  @@ignore
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model concept_synonym {
  concept_id           Int
  concept_synonym_name String @db.VarChar(1000)
  language_concept_id  Int

  @@ignore
@@schema("cdm")
}

model condition_era {
  condition_era_id           Int      @id(map: "xpk_condition_era")
  person_id                  Int
  condition_concept_id       Int
  condition_era_start_date   DateTime @db.Date
  condition_era_end_date     DateTime @db.Date
  condition_occurrence_count Int?
@@schema("cdm")
}

model condition_occurrence {
  condition_occurrence_id       Int       @id(map: "xpk_condition_occurrence")
  person_id                     Int
  condition_concept_id          Int
  condition_start_date          DateTime  @db.Date
  condition_start_datetime      DateTime? @db.Timestamp(6)
  condition_end_date            DateTime? @db.Date
  condition_end_datetime        DateTime? @db.Timestamp(6)
  condition_type_concept_id     Int
  condition_status_concept_id   Int?
  stop_reason                   String?   @db.VarChar(20)
  provider_id                   Int?
  visit_occurrence_id           Int?
  visit_detail_id               Int?
  condition_source_value        String?   @db.VarChar(50)
  condition_source_concept_id   Int?
  condition_status_source_value String?   @db.VarChar(50)
@@schema("cdm")
}

model cost {
  cost_id                   Int      @id(map: "xpk_cost")
  cost_event_id             Int
  cost_domain_id            String   @db.VarChar(20)
  cost_type_concept_id      Int
  currency_concept_id       Int?
  total_charge              Decimal? @db.Decimal
  total_cost                Decimal? @db.Decimal
  total_paid                Decimal? @db.Decimal
  paid_by_payer             Decimal? @db.Decimal
  paid_by_patient           Decimal? @db.Decimal
  paid_patient_copay        Decimal? @db.Decimal
  paid_patient_coinsurance  Decimal? @db.Decimal
  paid_patient_deductible   Decimal? @db.Decimal
  paid_by_primary           Decimal? @db.Decimal
  paid_ingredient_cost      Decimal? @db.Decimal
  paid_dispensing_fee       Decimal? @db.Decimal
  payer_plan_period_id      Int?
  amount_allowed            Decimal? @db.Decimal
  revenue_code_concept_id   Int?
  revenue_code_source_value String?  @db.VarChar(50)
  drg_concept_id            Int?
  drg_source_value          String?  @db.VarChar(3)
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model death {
  person_id               Int
  death_date              DateTime  @db.Date
  death_datetime          DateTime? @db.Timestamp(6)
  death_type_concept_id   Int?
  cause_concept_id        Int?
  cause_source_value      String?   @db.VarChar(50)
  cause_source_concept_id Int?

  @@ignore
@@schema("cdm")
}

model device_exposure {
  device_exposure_id             Int       @id(map: "xpk_device_exposure")
  person_id                      Int
  device_concept_id              Int
  device_exposure_start_date     DateTime  @db.Date
  device_exposure_start_datetime DateTime? @db.Timestamp(6)
  device_exposure_end_date       DateTime? @db.Date
  device_exposure_end_datetime   DateTime? @db.Timestamp(6)
  device_type_concept_id         Int
  unique_device_id               String?   @db.VarChar(255)
  production_id                  String?   @db.VarChar(255)
  quantity                       Int?
  provider_id                    Int?
  visit_occurrence_id            Int?
  visit_detail_id                Int?
  device_source_value            String?   @db.VarChar(50)
  device_source_concept_id       Int?
  unit_concept_id                Int?
  unit_source_value              String?   @db.VarChar(50)
  unit_source_concept_id         Int?
@@schema("cdm")
}

model domain {
  domain_id         String @id(map: "xpk_domain") @db.VarChar(20)
  domain_name       String @db.VarChar(255)
  domain_concept_id Int
@@schema("cdm")
}

model dose_era {
  dose_era_id         Int      @id(map: "xpk_dose_era")
  person_id           Int
  drug_concept_id     Int
  unit_concept_id     Int
  dose_value          Decimal  @db.Decimal
  dose_era_start_date DateTime @db.Date
  dose_era_end_date   DateTime @db.Date
@@schema("cdm")
}

model drug_era {
  drug_era_id         Int      @id(map: "xpk_drug_era")
  person_id           Int
  drug_concept_id     Int
  drug_era_start_date DateTime @db.Date
  drug_era_end_date   DateTime @db.Date
  drug_exposure_count Int?
  gap_days            Int?
@@schema("cdm")
}

model drug_exposure {
  drug_exposure_id             Int       @id(map: "xpk_drug_exposure")
  person_id                    Int
  drug_concept_id              Int
  drug_exposure_start_date     DateTime  @db.Date
  drug_exposure_start_datetime DateTime? @db.Timestamp(6)
  drug_exposure_end_date       DateTime  @db.Date
  drug_exposure_end_datetime   DateTime? @db.Timestamp(6)
  verbatim_end_date            DateTime? @db.Date
  drug_type_concept_id         Int
  stop_reason                  String?   @db.VarChar(20)
  refills                      Int?
  quantity                     Decimal?  @db.Decimal
  days_supply                  Int?
  sig                          String?
  route_concept_id             Int?
  lot_number                   String?   @db.VarChar(50)
  provider_id                  Int?
  visit_occurrence_id          Int?
  visit_detail_id              Int?
  drug_source_value            String?   @db.VarChar(50)
  drug_source_concept_id       Int?
  route_source_value           String?   @db.VarChar(50)
  dose_unit_source_value       String?   @db.VarChar(50)
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model drug_strength {
  drug_concept_id             Int
  ingredient_concept_id       Int
  amount_value                Decimal? @db.Decimal
  amount_unit_concept_id      Int?
  numerator_value             Decimal? @db.Decimal
  numerator_unit_concept_id   Int?
  denominator_value           Decimal? @db.Decimal
  denominator_unit_concept_id Int?
  box_size                    Int?
  valid_start_date            DateTime @db.Date
  valid_end_date              DateTime @db.Date
  invalid_reason              String?  @db.VarChar(1)

  @@ignore
@@schema("cdm")
}

model episode {
  episode_id                Int       @id(map: "xpk_episode")
  person_id                 Int
  episode_concept_id        Int
  episode_start_date        DateTime  @db.Date
  episode_start_datetime    DateTime? @db.Timestamp(6)
  episode_end_date          DateTime? @db.Date
  episode_end_datetime      DateTime? @db.Timestamp(6)
  episode_parent_id         Int?
  episode_number            Int?
  episode_object_concept_id Int
  episode_type_concept_id   Int
  episode_source_value      String?   @db.VarChar(50)
  episode_source_concept_id Int?
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model episode_event {
  episode_id                     Int
  event_id                       Int
  episode_event_field_concept_id Int

  @@ignore
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model fact_relationship {
  domain_concept_id_1     Int
  fact_id_1               Int
  domain_concept_id_2     Int
  fact_id_2               Int
  relationship_concept_id Int

  @@ignore
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model final_visit_ids {
  encounter_id            String? @db.VarChar(1000)
  visit_occurrence_id_new BigInt?

  @@ignore
@@schema("cdm")
}

model location {
  location_id           Int      @id(map: "xpk_location")
  address_1             String?  @db.VarChar(50)
  address_2             String?  @db.VarChar(50)
  city                  String?  @db.VarChar(50)
  state                 String?  @db.VarChar(2)
  zip                   String?  @db.VarChar(9)
  county                String?  @db.VarChar(20)
  location_source_value String?  @db.VarChar(50)
  country_concept_id    Int?
  country_source_value  String?  @db.VarChar(80)
  latitude              Decimal? @db.Decimal
  longitude             Decimal? @db.Decimal
@@schema("cdm")
}

model measurement {
  measurement_id                Int       @id(map: "xpk_measurement")
  person_id                     Int
  measurement_concept_id        Int
  measurement_date              DateTime  @db.Date
  measurement_datetime          DateTime? @db.Timestamp(6)
  measurement_time              String?   @db.VarChar(10)
  measurement_type_concept_id   Int
  operator_concept_id           Int?
  value_as_number               Decimal?  @db.Decimal
  value_as_concept_id           Int?
  unit_concept_id               Int?
  range_low                     Decimal?  @db.Decimal
  range_high                    Decimal?  @db.Decimal
  provider_id                   Int?
  visit_occurrence_id           Int?
  visit_detail_id               Int?
  measurement_source_value      String?   @db.VarChar(50)
  measurement_source_concept_id Int?
  unit_source_value             String?   @db.VarChar(50)
  unit_source_concept_id        Int?
  value_source_value            String?   @db.VarChar(50)
  measurement_event_id          Int?
  meas_event_field_concept_id   Int?
@@schema("cdm")
}

model metadata {
  metadata_id              Int       @id(map: "xpk_metadata")
  metadata_concept_id      Int
  metadata_type_concept_id Int
  name                     String    @db.VarChar(250)
  value_as_string          String?   @db.VarChar(250)
  value_as_concept_id      Int?
  value_as_number          Decimal?  @db.Decimal
  metadata_date            DateTime? @db.Date
  metadata_datetime        DateTime? @db.Timestamp(6)
@@schema("cdm")
}

model note {
  note_id                     Int       @id(map: "xpk_note")
  person_id                   Int
  note_date                   DateTime  @db.Date
  note_datetime               DateTime? @db.Timestamp(6)
  note_type_concept_id        Int
  note_class_concept_id       Int
  note_title                  String?   @db.VarChar(250)
  note_text                   String
  encoding_concept_id         Int
  language_concept_id         Int
  provider_id                 Int?
  visit_occurrence_id         Int?
  visit_detail_id             Int?
  note_source_value           String?   @db.VarChar(50)
  note_event_id               Int?
  note_event_field_concept_id Int?
@@schema("cdm")
}

model note_nlp {
  note_nlp_id                Int       @id(map: "xpk_note_nlp")
  note_id                    Int
  section_concept_id         Int?
  snippet                    String?   @db.VarChar(250)
  offset                     String?   @db.VarChar(50)
  lexical_variant            String    @db.VarChar(250)
  note_nlp_concept_id        Int?
  note_nlp_source_concept_id Int?api/prisma/schema.prisma
  nlp_system                 String?   @db.VarChar(250)
  nlp_date                   DateTime  @db.Date
  nlp_datetime               DateTime? @db.Timestamp(6)
  term_exists                String?   @db.VarChar(1)
  term_temporal              String?   @db.VarChar(50)
  term_modifiers             String?   @db.VarChar(2000)
@@schema("cdm")
}

model observation {
  observation_id                Int       @id(map: "xpk_observation")
  person_id                     Int
  observation_concept_id        Int
  observation_date              DateTime  @db.Date
  observation_datetime          DateTime? @db.Timestamp(6)
  observation_type_concept_id   Int
  value_as_number               Decimal?  @db.Decimal
  value_as_string               String?   @db.VarChar(60)
  value_as_concept_id           Int?
  qualifier_concept_id          Int?
  unit_concept_id               Int?
  provider_id                   Int?
  visit_occurrence_id           Int?
  visit_detail_id               Int?
  observation_source_value      String?   @db.VarChar(50)
  observation_source_concept_id Int?
  unit_source_value             String?   @db.VarChar(50)
  qualifier_source_value        String?   @db.VarChar(50)
  value_source_value            String?   @db.VarChar(50)
  observation_event_id          Int?
  obs_event_field_concept_id    Int?
@@schema("cdm")
}

model observation_period {
  observation_period_id         Int      @id(map: "xpk_observation_period")
  person_id                     Int
  observation_period_start_date DateTime @db.Date
  observation_period_end_date   DateTime @db.Date
  period_type_concept_id        Int
@@schema("cdm")
}

model payer_plan_period {
  payer_plan_period_id          Int      @id(map: "xpk_payer_plan_period")
  person_id                     Int
  payer_plan_period_start_date  DateTime @db.Date
  payer_plan_period_end_date    DateTime @db.Date
  payer_concept_id              Int?
  payer_source_value            String?  @db.VarChar(50)
  payer_source_concept_id       Int?
  plan_concept_id               Int?
  plan_source_value             String?  @db.VarChar(50)
  plan_source_concept_id        Int?
  sponsor_concept_id            Int?
  sponsor_source_value          String?  @db.VarChar(50)
  sponsor_source_concept_id     Int?
  family_source_value           String?  @db.VarChar(50)
  stop_reason_concept_id        Int?
  stop_reason_source_value      String?  @db.VarChar(50)
  stop_reason_source_concept_id Int?
@@schema("cdm")
}

model person {
  person_id                   Int       @id(map: "xpk_person")
  gender_concept_id           Int
  year_of_birth               Int
  month_of_birth              Int?
  day_of_birth                Int?
  birth_datetime              DateTime? @db.Timestamp(6)
  race_concept_id             Int
  ethnicity_concept_id        Int
  location_id                 Int?
  provider_id                 Int?
  care_site_id                Int?
  person_source_value         String?   @db.VarChar(50)
  gender_source_value         String?   @db.VarChar(50)
  gender_source_concept_id    Int?
  race_source_value           String?   @db.VarChar(50)
  race_source_concept_id      Int?
  ethnicity_source_value      String?   @db.VarChar(50)
  ethnicity_source_concept_id Int?

  @@index([person_source_value], map: "person_psv")
@@schema("cdm")
}

model procedure_occurrence {
  procedure_occurrence_id     Int       @id(map: "xpk_procedure_occurrence")
  person_id                   Int
  procedure_concept_id        Int
  procedure_date              DateTime  @db.Date
  procedure_datetime          DateTime? @db.Timestamp(6)
  procedure_end_date          DateTime? @db.Date
  procedure_end_datetime      DateTime? @db.Timestamp(6)
  procedure_type_concept_id   Int
  modifier_concept_id         Int?
  quantity                    Int?
  provider_id                 Int?
  visit_occurrence_id         Int?
  visit_detail_id             Int?
  procedure_source_value      String?   @db.VarChar(50)
  procedure_source_concept_id Int?
  modifier_source_value       String?   @db.VarChar(50)
@@schema("cdm")
}

model provider {
  provider_id                 Int     @id(map: "xpk_provider")
  provider_name               String? @db.VarChar(255)
  npi                         String? @db.VarChar(20)
  dea                         String? @db.VarChar(20)
  specialty_concept_id        Int?
  care_site_id                Int?
  year_of_birth               Int?
  gender_concept_id           Int?
  provider_source_value       String? @db.VarChar(50)
  specialty_source_value      String? @db.VarChar(50)
  specialty_source_concept_id Int?
  gender_source_value         String? @db.VarChar(50)
  gender_source_concept_id    Int?

  @@index([provider_source_value], map: "provider_psv")
@@schema("cdm")
}

model relationship {
  relationship_id         String @id(map: "xpk_relationship") @db.VarChar(20)
  relationship_name       String @db.VarChar(255)
  is_hierarchical         String @db.VarChar(1)
  defines_ancestry        String @db.VarChar(1)
  reverse_relationship_id String @db.VarChar(20)
  relationship_concept_id Int
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model source_to_concept_map {
  source_code             String   @db.VarChar(50)
  source_concept_id       Int
  source_vocabulary_id    String   @db.VarChar(20)
  source_code_description String?  @db.VarChar(255)
  target_concept_id       Int
  target_vocabulary_id    String   @db.VarChar(20)
  valid_start_date        DateTime @db.Date
  valid_end_date          DateTime @db.Date
  invalid_reason          String?  @db.VarChar(1)

  @@ignore
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model source_to_source_vocab_map {
  source_code             String?   @db.VarChar(50)
  source_concept_id       Int?
  source_code_description String?   @db.VarChar(255)
  source_vocabulary_id    String?   @db.VarChar(20)
  source_domain_id        String?   @db.VarChar(20)
  source_concept_class_id String?   @db.VarChar(20)
  source_valid_start_date DateTime? @db.Date
  source_valid_end_date   DateTime? @db.Date
  source_invalid_reason   String?   @db.VarChar(1)
  target_concept_id       Int?
  target_concept_name     String?   @db.VarChar(255)
  target_vocabulary_id    String?   @db.VarChar(20)
  target_domain_id        String?   @db.VarChar(20)
  target_concept_class_id String?   @db.VarChar(20)
  target_invalid_reason   String?   @db.VarChar(1)
  target_standard_concept String?   @db.VarChar(1)

  @@index([source_code], map: "idx_source_vocab_map_source_code")
  @@index([source_vocabulary_id], map: "idx_source_vocab_map_source_vocab_id")
  @@index([source_code, source_vocabulary_id, source_domain_id], map: "source_to_source_vocab_map_scsvisdi")
  @@ignore
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model source_to_standard_vocab_map {
  source_code             String?   @db.VarChar(50)
  source_concept_id       Int?
  source_code_description String?   @db.VarChar(255)
  source_vocabulary_id    String?   @db.VarChar(20)
  source_domain_id        String?   @db.VarChar(20)
  source_concept_class_id String?   @db.VarChar(20)
  source_valid_start_date DateTime? @db.Date
  source_valid_end_date   DateTime? @db.Date
  source_invalid_reason   String?   @db.VarChar(1)
  target_concept_id       Int?
  target_concept_name     String?   @db.VarChar(255)
  target_vocabulary_id    String?   @db.VarChar(20)
  target_domain_id        String?   @db.VarChar(20)
  target_concept_class_id String?   @db.VarChar(20)
  target_invalid_reason   String?   @db.VarChar(1)
  target_standard_concept String?   @db.VarChar(1)

  @@index([source_code], map: "idx_vocab_map_source_code")
  @@index([source_vocabulary_id], map: "idx_vocab_map_source_vocab_id")
  @@index([source_code, source_vocabulary_id, source_domain_id], map: "source_to_standard_vocab_map_scsvsd")
  @@index([source_code, target_domain_id, target_vocabulary_id, source_vocabulary_id, target_standard_concept, target_invalid_reason], map: "source_to_standard_vocab_map_sctditvisvitsctir")
  @@ignore
@@schema("cdm")
}

model specimen {
  specimen_id                 Int       @id(map: "xpk_specimen")
  person_id                   Int
  specimen_concept_id         Int
  specimen_type_concept_id    Int
  specimen_date               DateTime  @db.Date
  specimen_datetime           DateTime? @db.Timestamp(6)
  quantity                    Decimal?  @db.Decimal
  unit_concept_id             Int?
  anatomic_site_concept_id    Int?
  disease_status_concept_id   Int?
  specimen_source_id          String?   @db.VarChar(50)
  specimen_source_value       String?   @db.VarChar(50)
  unit_source_value           String?   @db.VarChar(50)
  anatomic_site_source_value  String?   @db.VarChar(50)
  disease_status_source_value String?   @db.VarChar(50)
@@schema("cdm")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model states_map {
  state              String? @db.VarChar(50)
  state_abbreviation String? @db.VarChar(2)

  @@ignore
@@schema("cdm")
}

model visit_detail {
  visit_detail_id                Int       @id(map: "xpk_visit_detail")
  person_id                      Int
  visit_detail_concept_id        Int
  visit_detail_start_date        DateTime  @db.Date
  visit_detail_start_datetime    DateTime? @db.Timestamp(6)
  visit_detail_end_date          DateTime  @db.Date
  visit_detail_end_datetime      DateTime? @db.Timestamp(6)
  visit_detail_type_concept_id   Int
  provider_id                    Int?
  care_site_id                   Int?
  visit_detail_source_value      String?   @db.VarChar(50)
  visit_detail_source_concept_id Int?
  admitted_from_concept_id       Int?
  admitted_from_source_value     String?   @db.VarChar(50)
  discharged_to_source_value     String?   @db.VarChar(50)
  discharged_to_concept_id       Int?
  preceding_visit_detail_id      Int?
  parent_visit_detail_id         Int?
  visit_occurrence_id            Int
@@schema("cdm")
}

model visit_occurrence {
  visit_occurrence_id           Int       @id(map: "xpk_visit_occurrence")
  person_id                     Int
  visit_concept_id              Int
  visit_start_date              DateTime  @db.Date
  visit_start_datetime          DateTime? @db.Timestamp(6)
  visit_end_date                DateTime  @db.Date
  visit_end_datetime            DateTime? @db.Timestamp(6)
  visit_type_concept_id         Int
  provider_id                   Int?
  care_site_id                  Int?
  visit_source_value            String?   @db.VarChar(50)
  visit_source_concept_id       Int?
  admitted_from_concept_id      Int?
  admitted_from_source_value    String?   @db.VarChar(50)
  discharged_to_concept_id      Int?
  discharged_to_source_value    String?   @db.VarChar(50)
  preceding_visit_occurrence_id Int?
@@schema("cdm")
}

model vocabulary {
  vocabulary_id         String  @id(map: "xpk_vocabulary") @db.VarChar(20)
  vocabulary_name       String  @db.VarChar(255)
  vocabulary_reference  String? @db.VarChar(255)
  vocabulary_version    String? @db.VarChar(255)
  vocabulary_concept_id Int
@@schema("cdm")
}
